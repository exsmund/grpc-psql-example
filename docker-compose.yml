version: '3.7'
services:
  postgres:
    image: postgres:14.2
    container_name: postgres
    restart: always
    volumes:
      # initdb.sh creates users table
      - ./docker/psql/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5432:5432"
    environment:
       POSTGRES_PASSWORD: example
       POSTGRES_DB: example

  redis:
    image: redis:7.0-rc-alpine
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.1.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "user_creation:1:1"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_AUTO_CRETE_TOPIC_ENABLE: 'true'


  clickhouse:
    image: yandex/clickhouse-server:21.3.20
    container_name: clickhouse
    ports:
     - "9000:9000"
    volumes:
      # init.sql creates log database and user_creation table
      - "./docker/ch/init.sql:/docker-entrypoint-initdb.d/init.sql"

  # ch-client:
  #   image: yandex/clickhouse-client
  #   command: ['--host', 'ch-server']
  #   depends_on:
  #     - ch-server
